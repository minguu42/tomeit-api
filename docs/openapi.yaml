openapi: 3.0.0

info:
  version: 0.1.0
  title: tomeit API 仕様書
  description: tomeit の REST API の仕様書である.

servers:
  - description: ローカルの開発環境
    url: http://localhost:8080

tags:
  - name: tasks
    description: タスク関連 API
  - name: pomodoros
    description: ポモドーロ関連 API

paths:
  /tasks:
    post:
      summary: タスク作成 API
      tags:
        - tasks
      description: |
        タスクを作成する.
        タスク名, 優先度, 期限を受け取り, ユーザと結びつけてデータベースに保存する.
        優先度, 期限は省略可能である.
      parameters:
        - $ref: "#/components/parameters/idToken"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: タスク名
                  type: string
                  example: タスク1
                priority:
                  description: タスクの優先度
                  type: integer
                  example: 2
                deadline:
                  description: タスクの期限
                  type: string
                  example: "2021-12-31"
              required:
                - name
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "400":
          description: |
            Bad Request
            - リクエストボディの JSON の形式が適切でない
            - name プロパティが含まれていない
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errBadRequest"
        "401":
          $ref: "#/components/responses/errAuthentication"

  /tasks/undone:
    get:
      summary: 未完了タスク一覧取得 API
      tags:
        - tasks
      description: |
        タスク一覧を取得する.
        更新順で最大30個取得する.
      parameters:
        - $ref: "#/components/parameters/idToken"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  tasks:
                    type: array
                    items:
                      $ref: "#/components/schemas/Task"
  /tasks/done:
    get:
      summary: 完了済みタスク一覧取得 API
      tags:
        - tasks
      description: |
        完了済みタスクを取得する.
        更新順で最大30個取得する.
      parameters:
        - $ref: "#/components/parameters/idToken"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  tasks:
                    type: array
                    items:
                      $ref: "#/components/schemas/Task"
  /tasks/done/{taskID}:
    put:
      summary: タスク完了 API
      tags:
        - tasks
      description: |
        タスクを完了する.
        taskID で一意のタスクを指定する.
      parameters:
        - $ref: "#/components/parameters/taskID"
        - $ref: "#/components/parameters/idToken"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
  /pomodoros/records:
    post:
      summary: ポモドーロ記録 API
      tags:
        - pomodoros
      description: |
        ポモドーロの実行を記録する.
      parameters:
        - $ref: "#/components/parameters/idToken"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                taskID:
                  type: integer
                  example: 1
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PomodoroRecord"
    get:
      summary: ポモドーロ記録一覧取得 API
      tags:
        - pomodoros
      description: |
        ポモドーロの実行記録を一覧で取得する.
        更新順で最大30件まで取得する.
      parameters:
        - $ref: "#/components/parameters/idToken"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  pomodoroRecords:
                    type: array
                    items:
                      $ref: "#/components/schemas/PomodoroRecord"
  /pomodoros/records/count/today:
    get:
      summary: 今日実行したポモドーロ数取得 API
      tags:
        - pomodoros
      description: |
        今日実行したポモドーロの数を取得する.
      parameters:
        - $ref: "#/components/parameters/idToken"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  todayPomodoroCount:
                    type: integer
                    example: 8
  /pomodoros/rest-count:
    get:
      summary: 次の15分休憩までのカウント取得 API
      tags:
        - pomodoros
      description: |
        次の15分休憩までの実行するポモドーロの数を取得する.
      parameters:
        - $ref: "#/components/parameters/idToken"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  restCount:
                    type: integer
                    example: 3

components:
  parameters:
    idToken:
      name: Authorization
      description: ユーザ固有の idToken
      in: header
      required: true
      schema:
        type: string
    taskID:
      name: taskID
      description: タスク番号
      in: path
      required: true
      schema:
        type: integer
        example: 1
  schemas:
    errBadRequest:
      type: object
      properties:
        status:
          description: レスポンスの説明
          type: string
          example: Request is wrong
        error:
          description: エラーの説明
          type: string
          example: some error message
      required:
        - status
    Task:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "タスク1"
        priority:
          type: integer
          example: 2
        deadline:
          type: string
          example: "2021-06-21"
        isDone:
          type: boolean
          example: false
        pomodoroCount:
          type: integer
          example: 0
        createdAt:
          type: string
          example: "2021-06-23T12:21:49Z"
        updatedAt:
          type: string
          example: "2021-06-23T12:21:49Z"
      required:
        - id
        - name
        - priority
        - deadline
        - isDone
        - pomodoroCount
        - createdAt
        - updatedAt
    PomodoroRecord:
      type: object
      properties:
        id:
          type: integer
          example: 1
        task:
          $ref: "#/components/schemas/Task"
        createdAt:
          type: string
          example: "2021-06-23T12:21:49Z"
  responses:
    errAuthentication:
      description: |
        Unauthorized
        - Authorization ヘッダの値が間違っている
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                description: レスポンスの説明
                type: string
                example: User authentication failed
              error:
                description: エラーの説明
                type: string
                example: some error message
            required:
              - status
